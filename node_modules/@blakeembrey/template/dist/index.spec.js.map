{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AAEnC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC5B,MAAM,EAAE,GAAG,gBAAQ,CAAC,iBAAiB,CAAC,CAAC;QAEvC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,EAAE,GAAG,gBAAQ,CAAC,UAAU,CAAC,CAAC;QAEhC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,EAAE,GAAG,gBAAQ,CAAC,mCAAmC,CAAC,CAAC;QAEzD,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { template } from \"./index\";\n\ndescribe(\"string-template\", () => {\n  it(\"should accept data\", () => {\n    const fn = template(\"Hello {{name}}!\");\n\n    expect(fn({ name: \"Blake\" })).toEqual(\"Hello Blake!\");\n  });\n\n  it(\"should support vars at beginning or end of template\", () => {\n    const fn = template(\"{{test}}\");\n\n    expect(fn({ test: \"test\" })).toEqual(\"test\");\n  });\n\n  it(\"should escape quotes in compilation output\", () => {\n    const fn = template(\"\\\"Some things\\\" {{test}} 'quoted'\");\n\n    expect(fn({ test: \"are\" })).toEqual(\"\\\"Some things\\\" are 'quoted'\");\n  });\n});\n"]}